{"version":3,"sources":["../src/bulkrating.js"],"names":["define","$","ajax","notification","BulkRating","cmid","document","on","saveHandler","bind","compid","data","toggleClass","prop","find","prototype","scalesvalues","self","requests","each","push","value","val","JSON","stringify","group","length","call","methodname","args","defaultscalesvalues","done","context","attr","show","fail","exception","init"],"mappings":"AAuBAA,OAAM,kCAAC,CAAC,QAAD,CACH,WADG,CAEH,mBAFG,CAAD,CAGF,SAASC,CAAT,CAAYC,CAAZ,CAAkBC,CAAlB,CAAgC,CAM5B,GAAIC,CAAAA,CAAU,CAAG,SAASC,CAAT,CAAe,CAC5B,KAAKA,IAAL,CAAYA,CAAZ,CACAJ,CAAC,CAACK,QAAD,CAAD,CAAYC,EAAZ,CAAe,QAAf,CAAyB,mBAAzB,CAA8C,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAA9C,EACAR,CAAC,CAACK,QAAD,CAAD,CAAYC,EAAZ,CAAe,QAAf,CAAyB,sCAAzB,CAAiE,UAAW,CACxE,GAAIG,CAAAA,CAAM,CAAGT,CAAC,CAAC,IAAD,CAAD,CAAQU,IAAR,CAAa,QAAb,CAAb,CACAV,CAAC,CAAC,qBAAuBS,CAAxB,CAAD,CAAiCE,WAAjC,CAA6C,kBAA7C,EACA,GAAIX,CAAC,CAAC,IAAD,CAAD,CAAQY,IAAR,CAAa,SAAb,CAAJ,CAA6B,CACzBZ,CAAC,CAAC,qBAAuBS,CAAxB,CAAD,CAAiCI,IAAjC,CAAsC,OAAtC,EAA+CD,IAA/C,CAAoD,UAApD,IACH,CAFD,IAEO,CACHZ,CAAC,CAAC,qBAAuBS,CAAxB,CAAD,CAAiCI,IAAjC,CAAsC,OAAtC,EAA+CD,IAA/C,CAAoD,UAApD,IACH,CACJ,CARD,CASH,CAZD,CAeAT,CAAU,CAACW,SAAX,CAAqBV,IAArB,CAA4B,IAA5B,CASAD,CAAU,CAACW,SAAX,CAAqBP,WAArB,CAAmC,UAAW,IACtCQ,CAAAA,CAAY,CAAG,EADuB,CAEtCC,CAAI,CAAG,IAF+B,CAGtCC,CAHsC,CAK1CjB,CAAC,CAAC,sDAAD,CAAD,CAA0DkB,IAA1D,CAA+D,UAAY,CACvE,GAAIT,CAAAA,CAAM,CAAGT,CAAC,CAAC,IAAD,CAAD,CAAQU,IAAR,CAAa,QAAb,CAAb,CACAK,CAAY,CAACI,IAAb,CAAkB,CAACV,MAAM,CAAGA,CAAV,CAAkBW,KAAK,CAAGpB,CAAC,CAAC,IAAD,CAAD,CAAQqB,GAAR,EAA1B,CAAlB,CACH,CAHD,EAIAN,CAAY,CAAGO,IAAI,CAACC,SAAL,CAAeR,CAAf,CAAf,CACA,GAAIS,CAAAA,CAAK,CAAGxB,CAAC,CAAC,iCAAD,CAAb,CACA,GAAmB,CAAf,CAAAwB,CAAK,CAACC,MAAV,CAAsB,CAClBD,CAAK,CAAGA,CAAK,CAACH,GAAN,EACX,CAFD,IAEO,CACHG,CAAK,CAAG,CACX,CAEDP,CAAQ,CAAGhB,CAAI,CAACyB,IAAL,CAAU,CAAC,CAClBC,UAAU,CAAE,qCADM,CAElBC,IAAI,CAAE,CACFxB,IAAI,CAAEY,CAAI,CAACZ,IADT,CAEFyB,mBAAmB,CAAEd,CAFnB,CAGFS,KAAK,CAAEA,CAHL,CAFY,CAAD,CAAV,CAAX,CASAP,CAAQ,CAAC,CAAD,CAAR,CAAYa,IAAZ,CAAiB,SAASC,CAAT,CAAkB,CAC/B,GAAIA,CAAJ,CAAa,CACT/B,CAAC,CAAC,sCAAD,CAAD,CAA0CgC,IAA1C,CAA+C,UAA/C,KACAhC,CAAC,CAAC,uBAAD,CAAD,CAA2BiC,IAA3B,EACH,CACJ,CALD,EAKGC,IALH,CAKQhC,CAAY,CAACiC,SALrB,EAOA,QACH,CAlCD,CAoCA,MAAO,CAQHC,IAAI,CAAE,cAAShC,CAAT,CAAe,CACjB,MAAO,IAAID,CAAAA,CAAJ,CAAeC,CAAf,CACV,CAVE,CAaV,CAlFC,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Bulk rating.\n *\n * @module     report_cmcompetency/bulkrating\n * @author     Issam Taboubi <issam.taboubi@umontreal.ca>\n * @copyright  2019 Université de Montréal\n */\n\ndefine(['jquery',\n    'core/ajax',\n    'core/notification'],\n    function($, ajax, notification) {\n\n        /**\n         * Default scales values object.\n         * @param {Number} cmid The course module id\n         */\n        var BulkRating = function(cmid) {\n            this.cmid = cmid;\n            $(document).on('submit', '#savescalesvalues', this.saveHandler.bind(this));\n            $(document).on('change', '.donotapplybulk input[type=checkbox]', function() {\n                var compid = $(this).data('compid');\n                $('#rating_table_comp' + compid).toggleClass(\"enabled disabled\");\n                if ($(this).prop('checked')) {\n                    $('#rating_table_comp' + compid).find('input').prop('disabled', true);\n                } else {\n                    $('#rating_table_comp' + compid).find('input').prop('disabled', false);\n                }\n            });\n        };\n\n        /** @var {Number} The course module id. */\n        BulkRating.prototype.cmid = null;\n\n        /**\n         * Triggered when form is submitted.\n         *\n         * @name   saveHandler\n         * @return {Void}\n         * @function\n         */\n        BulkRating.prototype.saveHandler = function() {\n            var scalesvalues = [];\n            var self = this,\n                requests;\n\n            $('#savescalesvalues .enabled input[type=radio]:checked').each(function () {\n                var compid = $(this).data('compid');\n                scalesvalues.push({compid : compid, value : $(this).val()});\n            });\n            scalesvalues = JSON.stringify(scalesvalues);\n            var group = $('#selectgroup select[name=group]');\n            if (group.length > 0) {\n                group = group.val();\n            } else {\n                group = 0;\n            }\n\n            requests = ajax.call([{\n                methodname: 'report_cmcompetency_add_rating_task',\n                args: {\n                    cmid: self.cmid,\n                    defaultscalesvalues: scalesvalues,\n                    group: group\n                }\n            }]);\n\n            requests[0].done(function(context) {\n                if (context) {\n                    $('#savescalesvalues input[type=submit]').attr('disabled', true);\n                    $('#msg-success-cmrating').show();\n                }\n            }).fail(notification.exception);\n\n            return false;\n        };\n\n        return {\n            /**\n             * Main initialisation.\n             *\n             * @param {Number} cmid The course module id.\n             * @return {BulkRating} A new instance of BulkRating.\n             * @method init\n             */\n            init: function(cmid) {\n                return new BulkRating(cmid);\n            }\n        };\n\n    });\n"],"file":"bulkrating.min.js"}