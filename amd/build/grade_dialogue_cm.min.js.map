{"version":3,"sources":["../src/grade_dialogue_cm.js"],"names":["define","$","Notification","Templates","ModalFactory","ModalEvents","EventBase","Str","Fragment","GradeCm","ratingOptions","showApplyGroup","contextid","trigger","prototype","constructor","apply","_ratingOptions","_showApplyGroup","display","Object","create","modal","_afterRender","btnRate","_find","lstRating","applyGroup","click","e","preventDefault","_trigger","bind","change","node","val","prop","valgroup","destroy","get_string","then","title","type","types","SAVE_CANCEL","body","large","buttons","save","done","getRoot","on","shown","setBody","_render","hidden","bodyRendered","find","addClass","fail","exception","selector","args","canGrade","_canGrade","JSON","stringify","showapplygroup","loadFragment"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Grade dialogue for course modules.\n *\n * @module     report_cmcompetency/grade_dialogue_cm\n * @copyright  2019 Université de Montréal\n * @author     Marie-Eve Lévesque <marie-eve.levesque.8@umontreal.ca>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery',\n        'core/notification',\n        'core/templates',\n        'core/modal_factory',\n        'core/modal_events',\n        'tool_lp/event_base',\n        'core/str',\n        'core/fragment'\n    ], function($, Notification, Templates, ModalFactory, ModalEvents, EventBase, Str, Fragment) {\n\n        /**\n         * Grade Course module dialogue class.\n         * @param {Array} ratingOptions\n         * @param {Boolean} showApplyGroup\n         * @param {Number} contextid\n         * @param {object} trigger the element trigger\n         */\n        var GradeCm = function(ratingOptions, showApplyGroup, contextid, trigger) {\n            EventBase.prototype.constructor.apply(this, []);\n            this._ratingOptions = ratingOptions;\n            this._showApplyGroup = showApplyGroup;\n            this.contextid = contextid;\n            this.display($(trigger));\n        };\n        GradeCm.prototype = Object.create(EventBase.prototype);\n\n        /** @type {Dialogue} The dialogue. */\n        GradeCm.prototype.modal = null;\n        /** @type {Array} Array of objects containing, 'value', 'name' and optionally 'selected'. */\n        GradeCm.prototype._ratingOptions = null;\n        /** @type {Number} The context id. */\n        GradeCm.prototype.contextid = null;\n\n        /**\n         * After render hook.\n         *\n         * @method _afterRender\n         * @protected\n         */\n        GradeCm.prototype._afterRender = function() {\n            var btnRate = this._find('[data-action=\"save\"]'),\n                lstRating = this._find('[name=\"rating\"]'),\n                applyGroup = this._find('[name=\"applygroup\"]');\n\n            this._find('[data-action=\"cancel\"]').click(function(e) {\n                e.preventDefault();\n                this._trigger('cancelled');\n            }.bind(this));\n\n            lstRating.change(function() {\n                var node = $(this);\n                if (!node.val()) {\n                    btnRate.prop('disabled', true);\n                } else {\n                    btnRate.prop('disabled', false);\n                }\n            }).change();\n\n            btnRate.click(function(e) {\n                e.preventDefault();\n                var val = lstRating.val();\n                if (!val) {\n                    return;\n                }\n                var valgroup = applyGroup.prop('checked');\n                if( valgroup !== true ) {\n                    valgroup = false;\n                }\n                this._trigger('rated', {\n                    'rating': val,\n                    'applygroup': valgroup\n                });\n            }.bind(this));\n        };\n\n        /**\n         * destroy the dialogue.\n         *\n         * @method destroy\n         */\n        GradeCm.prototype.destroy = function() {\n            this.modal.destroy();\n        };\n\n        /**\n         * Opens the picker.\n         *\n         * @param {object} trigger the element trigger\n         * @method display\n         * @return {Promise}\n         */\n        GradeCm.prototype.display = function(trigger) {\n                return Str.get_string('rate', 'tool_lp').then(function(title) {\n                    return ModalFactory.create({\n                        type: ModalFactory.types.SAVE_CANCEL,\n                        title: title,\n                        body: '',\n                        large: true,\n                        buttons: {\n                            save: title,\n                        }\n                    }, trigger).done(function(modal) {\n                        // Keep a reference to the modal.\n                        this.modal = modal;\n                        // We want to reset the form every time it is opened.\n                        this.modal.getRoot().on(ModalEvents.shown, function() {\n                            this.modal.setBody(this._render());\n                        }.bind(this));\n\n                        this.modal.getRoot().on(ModalEvents.hidden, function() {\n                            this._trigger('popupdestroyed');\n                            this.modal.destroy();\n                        }.bind(this));\n\n                        // We want to hide the submit buttons of the form every time it is opened.\n                        this.modal.getRoot().on(ModalEvents.bodyRendered, function() {\n                            this.modal.getRoot().find('[data-groupname=buttonar]').addClass('hidden');\n                            this._afterRender();\n                        }.bind(this));\n\n                        return this.modal;\n                    }.bind(this));\n\n                }.bind(this)).fail(Notification.exception);\n        };\n\n        /**\n         * Find a node in the dialogue.\n         *\n         * @param {String} selector\n         * @method _find\n         * @returns {node} The node\n         * @protected\n         */\n        GradeCm.prototype._find = function(selector) {\n            return this.modal.getRoot().find(selector);\n        };\n\n        /**\n         * Render the dialogue.\n         *\n         * @method _render\n         * @protected\n         * @return {Promise}\n         */\n        GradeCm.prototype._render = function() {\n            var args = {};\n            args.canGrade = (this._canGrade) ? true : false;\n            args.ratingOptions = JSON.stringify(this._ratingOptions);\n            args.showapplygroup = (this._showApplyGroup) ? true : false;\n            args.contextid = this.contextid;\n\n            return Fragment.loadFragment('tool_cmcompetency', 'grade_cm', this.contextid, args);\n        };\n\n        return GradeCm;\n\n    });\n"],"file":"grade_dialogue_cm.min.js"}