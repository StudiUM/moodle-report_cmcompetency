{"version":3,"file":"grade_dialogue_cm.min.js","sources":["../src/grade_dialogue_cm.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Grade dialogue for course modules.\n *\n * @module     report_cmcompetency/grade_dialogue_cm\n * @copyright  2019 Université de Montréal\n * @author     Marie-Eve Lévesque <marie-eve.levesque.8@umontreal.ca>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery',\n        'core/notification',\n        'core/templates',\n        'core/modal_factory',\n        'core/modal_events',\n        'tool_lp/event_base',\n        'core/str',\n        'core/fragment',\n        'core_form/events'\n    ], function($, Notification, Templates, ModalFactory, ModalEvents, EventBase, Str, Fragment, FormEvents) {\n\n        /**\n         * Grade Course module dialogue class.\n         * @param {Array} ratingOptions\n         * @param {Boolean} showApplyGroup\n         * @param {Number} contextid\n         * @param {object} trigger the element trigger\n         */\n        var GradeCm = function(ratingOptions, showApplyGroup, contextid, trigger) {\n            EventBase.prototype.constructor.apply(this, []);\n            this._ratingOptions = ratingOptions;\n            this._showApplyGroup = showApplyGroup;\n            this.contextid = contextid;\n            this.display($(trigger));\n        };\n        GradeCm.prototype = Object.create(EventBase.prototype);\n\n        /** @type {Dialogue} The dialogue. */\n        GradeCm.prototype.modal = null;\n        /** @type {Array} Array of objects containing, 'value', 'name' and optionally 'selected'. */\n        GradeCm.prototype._ratingOptions = null;\n        /** @type {Number} The context id. */\n        GradeCm.prototype.contextid = null;\n\n        /**\n         * After render hook.\n         *\n         * @method _afterRender\n         * @protected\n         */\n        GradeCm.prototype._afterRender = function() {\n            var btnRate = this._find('[data-action=\"save\"]'),\n                lstRating = this._find('[name=\"rating\"]'),\n                applyGroup = this._find('[name=\"applygroup\"]');\n\n            this._find('[data-action=\"cancel\"]').click(function(e) {\n                e.preventDefault();\n                this._trigger('cancelled');\n            }.bind(this));\n\n            lstRating.change(function() {\n                var node = $(this);\n                if (!node.val()) {\n                    btnRate.prop('disabled', true);\n                } else {\n                    btnRate.prop('disabled', false);\n                }\n            }).change();\n\n            btnRate.click(function(e) {\n                e.preventDefault();\n                var val = lstRating.val();\n                if (!val) {\n                    return;\n                }\n                var valgroup = applyGroup.prop('checked');\n                if( valgroup !== true ) {\n                    valgroup = false;\n                }\n                this._trigger('rated', {\n                    'rating': val,\n                    'applygroup': valgroup\n                });\n                // Catch the submit event to remove autosave session\n                FormEvents.notifyFormSubmittedByJavascript(this.modal.getRoot().find('form')[0]);\n            }.bind(this));\n        };\n\n        /**\n         * destroy the dialogue.\n         *\n         * @method destroy\n         */\n        GradeCm.prototype.destroy = function() {\n            this.modal.destroy();\n        };\n\n        /**\n         * Opens the picker.\n         *\n         * @param {object} trigger the element trigger\n         * @method display\n         * @return {Promise}\n         */\n        GradeCm.prototype.display = function(trigger) {\n                return Str.get_string('rate', 'tool_lp').then(function(title) {\n                    return ModalFactory.create({\n                        type: ModalFactory.types.SAVE_CANCEL,\n                        title: title,\n                        body: '',\n                        large: true,\n                        buttons: {\n                            save: title,\n                        }\n                    }, trigger).done(function(modal) {\n                        // Keep a reference to the modal.\n                        this.modal = modal;\n                        // We want to reset the form every time it is opened.\n                        this.modal.getRoot().on(ModalEvents.shown, function() {\n                            this.modal.setBody(this._render());\n                        }.bind(this));\n\n                        this.modal.getRoot().on(ModalEvents.hidden, function() {\n                            this._trigger('popupdestroyed');\n                            this.modal.destroy();\n                        }.bind(this));\n\n                        // We want to hide the submit buttons of the form every time it is opened.\n                        this.modal.getRoot().on(ModalEvents.bodyRendered, function() {\n                            this.modal.getRoot().find('[data-groupname=buttonar]').addClass('hidden');\n                            this._afterRender();\n                        }.bind(this));\n\n                        return this.modal;\n                    }.bind(this));\n\n                }.bind(this)).fail(Notification.exception);\n        };\n\n        /**\n         * Find a node in the dialogue.\n         *\n         * @param {String} selector\n         * @method _find\n         * @returns {node} The node\n         * @protected\n         */\n        GradeCm.prototype._find = function(selector) {\n            return this.modal.getRoot().find(selector);\n        };\n\n        /**\n         * Render the dialogue.\n         *\n         * @method _render\n         * @protected\n         * @return {Promise}\n         */\n        GradeCm.prototype._render = function() {\n            var args = {};\n            args.canGrade = (this._canGrade) ? true : false;\n            args.ratingOptions = JSON.stringify(this._ratingOptions);\n            args.showapplygroup = (this._showApplyGroup) ? true : false;\n            args.contextid = this.contextid;\n\n            return Fragment.loadFragment('tool_cmcompetency', 'grade_cm', this.contextid, args);\n        };\n\n        return GradeCm;\n\n    });\n"],"names":["define","$","Notification","Templates","ModalFactory","ModalEvents","EventBase","Str","Fragment","FormEvents","GradeCm","ratingOptions","showApplyGroup","contextid","trigger","prototype","constructor","apply","this","_ratingOptions","_showApplyGroup","display","Object","create","modal","_afterRender","btnRate","_find","lstRating","applyGroup","click","e","preventDefault","_trigger","bind","change","val","prop","valgroup","notifyFormSubmittedByJavascript","getRoot","find","destroy","get_string","then","title","type","types","SAVE_CANCEL","body","large","buttons","save","done","on","shown","setBody","_render","hidden","bodyRendered","addClass","fail","exception","selector","args","canGrade","_canGrade","JSON","stringify","showapplygroup","loadFragment"],"mappings":";;;;;;;;AAwBAA,+CAAO,CAAC,SACA,oBACA,iBACA,qBACA,oBACA,qBACA,WACA,gBACA,qBACD,SAASC,EAAGC,aAAcC,UAAWC,aAAcC,YAAaC,UAAWC,IAAKC,SAAUC,gBASrFC,QAAU,SAASC,cAAeC,eAAgBC,UAAWC,SAC7DR,UAAUS,UAAUC,YAAYC,MAAMC,KAAM,SACvCC,eAAiBR,mBACjBS,gBAAkBR,oBAClBC,UAAYA,eACZQ,QAAQpB,EAAEa,kBAEnBJ,QAAQK,UAAYO,OAAOC,OAAOjB,UAAUS,YAG1BS,MAAQ,KAE1Bd,QAAQK,UAAUI,eAAiB,KAEnCT,QAAQK,UAAUF,UAAY,KAQ9BH,QAAQK,UAAUU,aAAe,eACzBC,QAAUR,KAAKS,MAAM,wBACrBC,UAAYV,KAAKS,MAAM,mBACvBE,WAAaX,KAAKS,MAAM,4BAEvBA,MAAM,0BAA0BG,MAAM,SAASC,GAChDA,EAAEC,sBACGC,SAAS,cAChBC,KAAKhB,OAEPU,UAAUO,QAAO,WACFlC,EAAEiB,MACHkB,MAGNV,QAAQW,KAAK,YAAY,GAFzBX,QAAQW,KAAK,YAAY,MAI9BF,SAEHT,QAAQI,MAAM,SAASC,GACnBA,EAAEC,qBACEI,IAAMR,UAAUQ,SACfA,SAGDE,SAAWT,WAAWQ,KAAK,YACd,IAAbC,WACAA,UAAW,QAEVL,SAAS,QAAS,QACTG,eACIE,WAGlB7B,WAAW8B,gCAAgCrB,KAAKM,MAAMgB,UAAUC,KAAK,QAAQ,MAC/EP,KAAKhB,QAQXR,QAAQK,UAAU2B,QAAU,gBACnBlB,MAAMkB,WAUfhC,QAAQK,UAAUM,QAAU,SAASP,gBACtBP,IAAIoC,WAAW,OAAQ,WAAWC,KAAK,SAASC,cAC5CzC,aAAamB,OAAO,CACvBuB,KAAM1C,aAAa2C,MAAMC,YACzBH,MAAOA,MACPI,KAAM,GACNC,OAAO,EACPC,QAAS,CACLC,KAAMP,QAEX/B,SAASuC,KAAK,SAAS7B,mBAEjBA,MAAQA,WAERA,MAAMgB,UAAUc,GAAGjD,YAAYkD,MAAO,gBAClC/B,MAAMgC,QAAQtC,KAAKuC,YAC1BvB,KAAKhB,YAEFM,MAAMgB,UAAUc,GAAGjD,YAAYqD,OAAQ,gBACnCzB,SAAS,uBACTT,MAAMkB,WACbR,KAAKhB,YAGFM,MAAMgB,UAAUc,GAAGjD,YAAYsD,aAAc,gBACzCnC,MAAMgB,UAAUC,KAAK,6BAA6BmB,SAAS,eAC3DnC,gBACPS,KAAKhB,OAEAA,KAAKM,OACdU,KAAKhB,QAETgB,KAAKhB,OAAO2C,KAAK3D,aAAa4D,YAWxCpD,QAAQK,UAAUY,MAAQ,SAASoC,iBACxB7C,KAAKM,MAAMgB,UAAUC,KAAKsB,WAUrCrD,QAAQK,UAAU0C,QAAU,eACpBO,KAAO,UACXA,KAAKC,WAAY/C,KAAKgD,UACtBF,KAAKrD,cAAgBwD,KAAKC,UAAUlD,KAAKC,gBACzC6C,KAAKK,iBAAkBnD,KAAKE,gBAC5B4C,KAAKnD,UAAYK,KAAKL,UAEfL,SAAS8D,aAAa,oBAAqB,WAAYpD,KAAKL,UAAWmD,OAG3EtD"}