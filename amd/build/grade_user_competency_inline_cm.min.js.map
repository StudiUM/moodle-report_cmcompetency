{"version":3,"sources":["../src/grade_user_competency_inline_cm.js"],"names":["define","$","notification","ajax","log","GradeDialogue","EventBase","ScaleValues","InlineEditorCm","selector","scaleId","competencyId","userId","coursemoduleId","chooseStr","showApplyGroup","contextid","prototype","constructor","apply","trigger","length","Error","_scaleId","_competencyId","_userId","_coursemoduleId","_chooseStr","_showApplyGroup","_setUp","_methodName","_args","competencyid","cmid","userid","Object","create","options","self","promise","get_values","done","scalevalues","push","value","name","i","optionConfig","id","_dialogue","on","e","data","args","grade","rating","note","_find","serialize","applygroup","call","methodname","evidence","_trigger","fail","exception"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module to enable inline editing of a comptency grade for a course module.\n *\n * @module     report_cmcompetency/grade_user_competency_inline_cm\n * @copyright  2019 Université de Montréal\n * @author     Marie-Eve Lévesque <marie-eve.levesque.8@umontreal.ca>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery',\n        'core/notification',\n        'core/ajax',\n        'core/log',\n        'report_cmcompetency/grade_dialogue_cm',\n        'tool_lp/event_base',\n        'tool_lp/scalevalues'\n    ], function($, notification, ajax, log, GradeDialogue, EventBase, ScaleValues) {\n\n        /**\n         * InlineEditorCm\n         *\n         * @param {String} selector The selector to trigger the grading.\n         * @param {Number} scaleId The id of the scale for this competency.\n         * @param {Number} competencyId The id of the competency.\n         * @param {Number} userId The id of the user.\n         * @param {Number} coursemoduleId The id of the course module.\n         * @param {String} chooseStr Language string for choose a rating.\n         * @param {Boolean} showApplyGroup True if the option to grade group should be visible.\n         * @param {Number} contextid The context id.\n         */\n        var InlineEditorCm = function(selector, scaleId, competencyId, userId, coursemoduleId, chooseStr,\n                showApplyGroup, contextid) {\n            EventBase.prototype.constructor.apply(this, []);\n\n            this.trigger = $(selector);\n\n            if (!this.trigger.length) {\n                throw new Error('Could not find the trigger');\n            }\n\n            this._scaleId = scaleId;\n            this._competencyId = competencyId;\n            this._userId = userId;\n            this._coursemoduleId = coursemoduleId;\n            this._chooseStr = chooseStr;\n            this._showApplyGroup = showApplyGroup;\n            this.contextid = contextid;\n            this._setUp();\n\n            this._methodName = 'tool_cmcompetency_grade_competency_in_coursemodule';\n            this._args = {\n                competencyid: this._competencyId,\n                cmid: this._coursemoduleId,\n                userid: this._userId\n            };\n        };\n        InlineEditorCm.prototype = Object.create(EventBase.prototype);\n\n        /**\n         * Setup.\n         *\n         * @method _setUp\n         */\n        InlineEditorCm.prototype._setUp = function() {\n            var options = [],\n                self = this;\n\n            var promise = ScaleValues.get_values(self._scaleId);\n            promise.done(function(scalevalues) {\n                options.push({\n                    value: '',\n                    name: self._chooseStr\n                });\n\n                for (var i = 0; i < scalevalues.length; i++) {\n                    var optionConfig = scalevalues[i];\n                    options.push({\n                        value: optionConfig.id,\n                        name: optionConfig.name\n                    });\n                }\n\n                self._dialogue = new GradeDialogue(options, self._showApplyGroup, self.contextid, self.trigger);\n                self._dialogue.on('rated', function(e, data) {\n                    var args = self._args;\n                    args.grade = data.rating;\n                    args.note = self._dialogue._find('form').serialize();\n                    args.applygroup = data.applygroup;\n                    ajax.call([{\n                        methodname: self._methodName,\n                        args: args,\n                        done: function(evidence) {\n                            self._trigger('competencyupdated', {args: args, evidence: evidence});\n                        },\n                        fail: notification.exception\n                    }]);\n                });\n                self._dialogue.on('popupdestroyed', function() {\n                    self._setUp();\n                });\n            }).fail(notification.exception);\n        };\n\n        /** @type {Number} The scale id for this competency. */\n        InlineEditorCm.prototype._scaleId = null;\n        /** @type {Number} The id of the competency. */\n        InlineEditorCm.prototype._competencyId = null;\n        /** @type {Number} The id of the user. */\n        InlineEditorCm.prototype._userId = null;\n        /** @type {Number} The id of the course module. */\n        InlineEditorCm.prototype._coursemoduleId = null;\n        /** @type {String} The text for Choose rating. */\n        InlineEditorCm.prototype._chooseStr = null;\n        /** @type {GradeDialogue} The grading dialogue. */\n        InlineEditorCm.prototype._dialogue = null;\n        /** @type {Boolean} True if the option to grade group should be visible. */\n        InlineEditorCm.prototype._showApplyGroup = false;\n        /** @type {Number} The context id. */\n        InlineEditorCm.prototype.contextid = null;\n        InlineEditorCm.prototype.trigger = null;\n\n        return InlineEditorCm;\n    });"],"file":"grade_user_competency_inline_cm.min.js"}